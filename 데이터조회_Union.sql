-- UNION(합치고 중복제거한 후 정렬), UNION ALL (합치기)


-- UNION ALL 은 중복제거를 하지 않음, 정렬이 안됨. 대신 쿼리속도가 빠름.

-- 'ctr + e ' 를 누르면 처리한 건수와 cost 수를 알 수 있음.
--  UNION 이 UNION ALL 보다 COST 사용량이 많은 것을 볼 수 있음.

SELECT * FROM KOPO_CHANNEL_RESULT_A01
UNION 
SELECT * FROM KOPO_CHANNEL_RESULT_A02;


SELECT REGIONID, PRODUCTGROUP, YEARWEEK, QTY 
    FROM KOPO_CHANNEL_RESULT_A01
UNION ALL
SELECT REGIONID, PRODUCTGROUP, YEARWEEK, QTY
    FROM KOPO_CHANNEL_RESULT_A02;
 

-- 작업한 쿼리의 실행 시간조회: VIEW -> QUERY VIEWER
-- 실행계획 확인 (Explain Plan) : 쿼리 선택 후 CTRL + E 키 실행 쿼리의 cost를 확인하는 법 알아두세요
--(실행계획은 스키마(user명) 및 user와 연결된 tablespacename을 입력해야 합니다!)


-- 1,395,992 건
SELECT REGIONID, QTY
FROM
(
    SELECT *  FROM KOPO_CHANNEL_RESULT_A01
    UNION 
    SELECT *  FROM KOPO_CHANNEL_RESULT_A02
);

-- 8,614건
SELECT REGIONID, QTY FROM KOPO_CHANNEL_RESULT_A01
UNION 
SELECT REGIONID, QTY FROM KOPO_CHANNEL_RESULT_A02;



----
SELECT A.REGIONID,
    A.REGIONNAME,
    A.AP1ID,
    A.AP1NAME,
    A.ACCOUNTID,
    A.ACCOUNTNAME,
    A.SALESID,
    A.SALESNAME,
    A.PRODUCTGROUP,
    A.PRODUCT,
    (SELECT B.PRODUCT_NAME 
        FROM KOPO_PRODUCT_MST B 
        WHERE 1=1
        AND A.PRODUCT = B.PRODUCT_ID) AS PRODUCT_NAME,
    A.ITEM,
    A.YEARWEEK,
    A.YEAR,
    A.WEEK,
    A.QTY,
    A.TARGET,
    A.IDX 
FROM 
KOPO_CHANNEL_RESULT_A01 A;


SELECT A.REGIONID,
    A.REGIONNAME,
    A.AP1ID,
    A.AP1NAME,
    A.ACCOUNTID,
    A.ACCOUNTNAME,
    A.SALESID,
    A.SALESNAME,
    A.PRODUCTGROUP,
    A.PRODUCT,
    B.PRODUCT_NAME,
    A.ITEM,
    A.YEARWEEK,
    A.YEAR,
    A.WEEK,
    A.QTY,
    A.TARGET,
    A.IDX 
FROM 
KOPO_CHANNEL_RESULT_A01 A,
KOPO_PRODUCT_MST B
WHERE 1=1
AND A.PRODUCT = B.PRODUCT_ID(+);